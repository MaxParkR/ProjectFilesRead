
APRENDIDO DURANTE EL DESARROLLO DEL PROYECTO

Durante el desarrollo de este proyecto, adquirimos conocimientos y habilidades tanto técnicos como organizacionales que son esenciales para trabajar en proyectos de programación, particularmente con Java y manejo de archivos. 

Algunos de los aprendizajes clave incluyen:

-Manejo de archivos en Java: Aprendimos a trabajar con archivos de texto en Java, tanto para leer como para escribir datos. Esto es esencial cuando se manejan grandes volúmenes de datos en formato de texto plano o CSV. La correcta manipulación de estos archivos es crucial, y nos permitió comprender cómo manejar la entrada y salida (I/O) de manera eficiente en Java.

-Generación de datos pseudoaleatorios: Una parte interesante fue la generación de datos pseudoaleatorios para las pruebas del programa. Esto nos permitió entender cómo crear datos de prueba realistas y dinámicos, que son útiles para simular situaciones del mundo real sin depender de información estática.

-Procesamiento y análisis de datos: El desafío de procesar la información de las ventas, calcular la recaudación total por vendedor y generar reportes ordenados nos permitió reforzar mi capacidad para realizar cálculos y aplicar algoritmos de ordenamiento. También aprendimos cómo gestionar colecciones de datos en Java, como Listas y Mapas, para agrupar y ordenar información de manera eficiente.

-Validación y manejo de errores: Aprendimos a identificar y manejar errores comunes que podrían surgir debido a datos incorrectos en los archivos, como valores negativos o IDs de productos inexistentes. Implementamos técnicas para validar la entrada y aseguré que el programa fuera robusto frente a posibles inconsistencias en los datos.

-Buenas prácticas de programación: Fomentamos el uso de buenas prácticas en programación, como:
	-Nombres de variables claros y significativos.
	-Documentación detallada del código mediante comentarios y javadoc.
	-Uso adecuado de excepciones para manejar posibles errores.
	-Manejo de código modular mediante la creación de métodos que realicen tareas específicas (por ejemplo, createSalesMenFile, createProductsFile y createSalesManInfoFile).
	-Estructuración y espaciado adecuado del código para mejorar la legibilidad.




POSIBLES APLICACIONES EN LA VIDA PROFESIONAL DE LAS DESTREZAS Y CONOCIMIENTOS ADQUIRIDOS Y PRACTICADOS DURANTE EL DESARROLLO DEL PROYECTO

Los conocimientos y habilidades adquiridos en este proyecto tienen muchas aplicaciones en el ámbito profesional, especialmente en áreas relacionadas con la programación, el análisis de datos y la gestión de grandes volúmenes de información. 


Algunas aplicaciones clave podrían ser:
-Desarrollo de aplicaciones de gestión y reportes: El manejo de archivos de texto y la creación de reportes automáticos (por ejemplo, los reportes de ventas) son habilidades muy valiosas para la creación de aplicaciones de gestión empresarial. Este tipo de aplicaciones permite a las empresas generar reportes de ventas, inventarios, rendimiento de empleados, entre otros, de manera automática y eficiente.

-Análisis de datos en Java: Aprendimos a procesar, analizar y generar reportes a partir de grandes volúmenes de datos es una habilidad esencial en sectores como el análisis de negocios, el marketing, la inteligencia empresarial, y la ciencia de datos. El trabajo realizado con el procesamiento de archivos CSV, el cálculo de totales y el ordenamiento de resultados se puede aplicar a tareas similares en estas áreas:
	-Validación de datos y manejo de errores: El conocimiento de cómo validar entradas y manejar errores fue fundamental en la construcción de sistemas robustos. En el desarrollo de software profesional, la validación de datos y la implementación de mecanismos para manejar situaciones imprevistas son esenciales para evitar fallos en las aplicaciones.
	-Automatización y generación de datos de prueba: El desarrollo de métodos para generar archivos de prueba pseudoaleatorios es una habilidad importante para crear entornos de prueba para sistemas más grandes. Los programadores suelen generar datos simulados para probar funcionalidades sin depender de datos reales, lo cual es útil para la validación de sistemas en cualquier etapa de su desarrollo.
	-Programación orientada a objetos (OOP): En este proyecto se podría aplicar la programación orientada a objetos para organizar mejor las entidades involucradas: Vendedor, Producto, Venta, etc. Estas entidades podrían tener sus propios métodos y atributos, lo que facilita la escalabilidad del sistema en un futuro.



LAS DIFICULTADES PRESENTADAS DURANTE EL DESARROLLO DEL PROYECTO

Durante el desarrollo del proyecto, surgieron varias dificultades que pusieron a prueba nuestras habilidades de programación y resolución de problemas. 

Algunas de las principales dificultades son las siguientes:

- Manejo de archivos con formatos inconsistentes: Una de las dificultades más importantes fue el manejar archivos con formatos inconsistentes o datos erróneos. Por ejemplo, algunos archivos de ventas tenían cantidades o precios negativos, o productos con IDs que no coincidían con los registrados en el archivo de productos. Resolver este tipo de errores fue un reto y nos obligó a implementar una robusta validación de datos.
- Procesamiento de grandes cantidades de datos: Aunque no se especificó que el programa debía manejar "grandes" volúmenes de datos, el hecho de tener múltiples archivos de vendedores y productos nos podrían complicar el procesamiento para el manejo correcto de las estructuras de datos. La eficiencia en la lectura y el procesamiento de estos archivos fue una prioridad para evitar que el programa se volviera lento.
- Generación de datos de prueba realistas: Generar datos de prueba coherentes y realistas fue una tarea que requirió tiempo. Por ejemplo, generar nombres de vendedores, productos y ventas de manera que fueran variados, y que además reflejaran una "situación real" para las pruebas. Para atender este requerimiento nos apoyamos en consecución de listas de nombres comunes y productos genéricos.
- Generación de reportes ordenados: El cálculo y el ordenamiento de la recaudación de los vendedores y la cantidad de productos vendidos fue una tarea que implicó el manejo adecuado de estructuras de datos como listas y mapas en Java. Además, asegurar que los datos se escribieran correctamente en los archivos CSV, en el orden deseado, presentó varios desafíos. Tuvimos que garantizar que los algoritmos de ordenación fueran eficientes y correctos.
- Interacción con múltiples archivos: El manejo de múltiples archivos de texto (ventas, productos, vendedores) de forma eficiente, para asociar correctamente la información, fue una dificultad adicional. Tener que vincular las ventas con los productos y los vendedores con sus datos asociados requirió implementar una lógica bien definida para procesar estos archivos de manera conjunta
